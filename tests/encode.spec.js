"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ava_1 = require("ava");
var _1 = require("../dist/");
var asjon = new _1.AJSON()
    .addProcessor(_1.jsonPointer)
    .addProcessor(_1.recurseObjects)
    .addProcessor(_1.recurseArrays)
    .addProcessor(_1.recurseMap)
    .addProcessor(_1.recurseSet)
    .addProcessor(_1.specialNumbers)
    .addProcessor(_1.undefinedValue)
    .addProcessor(_1.regexpValue)
    .addProcessor(_1.dateValue)
    .addProcessor(_1.symbolValue);
ava_1.test('prim values', function (t) {
    t.deepEqual(asjon.encode(42), 42, 'number');
    t.deepEqual(asjon.encode(-42), -42, 'negative number');
    t.deepEqual(asjon.encode('woo!!!'), 'woo!!!', 'string');
    t.deepEqual(asjon.encode(true), true, 'boolean');
    t.deepEqual(asjon.encode(null), null, 'null');
});
ava_1.test('special values', function (t) {
    t.deepEqual(asjon.encode(-0), { $numberDecimal: '-0' }, 'negative zero');
    t.deepEqual(asjon.encode(undefined), { $undefined: true }, 'undefined');
    t.deepEqual(asjon.encode(NaN), { $numberDecimal: 'NaN' }, 'NaN');
    t.deepEqual(asjon.encode(Infinity), { $numberDecimal: 'Infinity' }, 'Infinity');
    t.deepEqual(asjon.encode(-Infinity), { $numberDecimal: '-Infinity' }, 'Neg Infinity');
    t.deepEqual(asjon.encode(/regexp/img), { $regex: 'regexp', $options: 'gim' }, ' RegExp');
    t.deepEqual(asjon.encode(new Date(1e12)), { $date: '2001-09-09T01:46:40.000Z' }, 'Date');
    t.deepEqual(asjon.encode(Symbol('a')), { $symbol: 'a' }, 'Symbol');
});
ava_1.test('objects', function (t) {
    t.deepEqual(asjon.encode(['a', 'b', 'c']), ['a', 'b', 'c'], 'Array');
    t.deepEqual(asjon.encode([]), [], 'Array (empty)');
    t.deepEqual(asjon.encode({ foo: 'bar', 'x-y': 'z' }), { foo: 'bar', 'x-y': 'z' }, 'Object');
    t.deepEqual(asjon.encode(new Set([1, 2, 3])), { $set: [1, 2, 3] }, 'Set');
    t.deepEqual(asjon.encode(new Map([['a', 'b']])), { $map: [['a', 'b']] }, 'Map');
});
ava_1.test('objects with special values', function (t) {
    t.deepEqual(asjon.encode(['a',
        new Date(1e12), 'c']), ['a', { $date: '2001-09-09T01:46:40.000Z' }, 'c'], 'Array');
    t.deepEqual(asjon.encode({ foo: 'bar', 'x-y': new Date(1e12) }), { foo: 'bar', 'x-y': { $date: '2001-09-09T01:46:40.000Z' } }, 'Object');
    t.deepEqual(asjon.encode(new Set([1, new Date(1e12), 3])), { $set: [1, { $date: '2001-09-09T01:46:40.000Z' }, 3] }, 'Set');
    t.deepEqual(asjon.encode(new Map([['a', new Date(1e12)]])), { $map: [['a', { $date: '2001-09-09T01:46:40.000Z' }]] }, 'Map');
});
ava_1.test('self referential', function (t) {
    var self = {};
    self.a = self;
    t.deepEqual(asjon.encode(self), { a: { $ref: '#' } }, 'object');
    var arr = [];
    arr[0] = arr;
    t.deepEqual(asjon.encode(arr), [{ $ref: '#' }], 'array');
    var map = new Map();
    map.set('self', map);
    t.deepEqual(asjon.encode(map), { $map: [['self', { $ref: '#' }]] }, 'Map');
    var set = new Set();
    set.add(set);
    set.add(42);
    t.deepEqual(asjon.encode(set), { $set: [{ $ref: '#' }, 42] }, 'Set');
});
ava_1.test('deep', function (t) {
    var obj = {
        string: 'a_string',
        number: 42,
        decimal: 42.3,
        array: ['a_string', 42, 42.3],
        object: {
            'also a string': 'string',
            'a number': 42
        }
    };
    t.snapshot(asjon.encode(obj));
});
ava_1.test('all', function (t) {
    var obj = {
        _id: '5aa882d3638a0f580d92c677',
        index: 0,
        name: {
            first: 'Valenzuela',
            last: 'Valenzuela'
        },
        registered: new Date(2014, 0, 1),
        symbol: Symbol('banana'),
        range: [
            -Infinity,
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            Infinity
        ],
        friends: [
            {
                id: -0,
                name: 'Benton Chase'
            },
            {
                id: 1,
                name: 'Mccarthy Morgan'
            },
            {
                id: NaN,
                name: 'Kaufman Price'
            }
        ]
    };
    obj.friends.push(obj);
    obj.friends.push(obj.friends[0]);
    t.snapshot(asjon.encode(obj));
});
ava_1.test('references', function (t) {
    var a = { a: 1, b: {} };
    a.c = a.b;
    t.deepEqual(asjon.encode(a), { a: 1, b: {}, c: { $ref: '#/b' } });
    var b = { a: 1, b: { c: {} } };
    b.c = b.b.c;
    t.deepEqual(asjon.encode(b), { a: 1, b: { c: {} }, c: { $ref: '#/b/c' } });
});
//# sourceMappingURL=data:application/json;base64,